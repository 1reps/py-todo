# pyproject.toml - Poetry 프로젝트 설정

[tool.poetry]
name = "pyToDo"
version = "0.1.0"
description = "FastAPI ToDo Application"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "api"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
sqlalchemy = "^2.0.43"
pymysql = "^1.1.0"

[tool.poetry.group.dev.dependencies]
# 코드 품질 도구
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"

# 테스트 도구
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
httpx = "^0.24.0"                   # FastAPI 테스트용

# 보안 및 린팅
bandit = "^1.7.5"
pre-commit = "^3.3.0"

# 타입 스텁
types-pymysql = "^1.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ==========================================
# Black - 코드 포맷터
# ==========================================
[tool.black]
line-length = 88
target-version = ['py311']          # Python 3.11로 업데이트
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

# ==========================================
# isort - import 정렬
# ==========================================
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
known_first_party = ["api", "tests"]
known_third_party = ["fastapi", "sqlalchemy", "pydantic", "uvicorn", "pymysql"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# ==========================================
# mypy - 타입 체킹
# ==========================================
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# 서드파티 라이브러리 무시
[[tool.mypy.overrides]]
module = ["sqlalchemy.*", "pymysql.*", "uvicorn.*"]
ignore_missing_imports = true

# ==========================================
# pytest - 테스트 설정
# ==========================================
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=api",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"               # FastAPI 비동기 테스트용
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# ==========================================
# Coverage - 코드 커버리지
# ==========================================
[tool.coverage.run]
source = ["api"]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/node_modules/*",
    "manage.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# ==========================================
# Bandit - 보안 검사
# ==========================================
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]